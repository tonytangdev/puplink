org: tonytangdeveloper
app: puplink
service: puplink
frameworkVersion: "3"

useDotenv: true

plugins:
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-3
  environment:
    REGION: ${self:provider.region}
    ENVIRONMENT: ${env:ENVIRONMENT}
    SUPBASE_DB_URL: ${env:SUPBASE_DB_URL}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: 
            - "arn:aws:s3:::puplink-bucket-${env:ENVIRONMENT}/*"
            - "arn:aws:s3:::puplink-bucket-${env:ENVIRONMENT}"
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
            - lambda:InvokeAsync
          Resource: "arn:aws:lambda:${self:provider.region}:*:function:${self:service}-${sls:stage}-destroy"

custom:
  bucketName: puplink-bucket-${env:ENVIRONMENT}

functions:
  upload:
    handler: src/handlers/upload.handler
    environment:
      BUCKET_NAME: ${self:custom.bucketName}
    events:
      - httpApi:
          path: /upload
          method: post
  destroy:
    handler: src/handlers/destroy.handler
  get:
    handler: src/handlers/get.handler
    environment:
      DESTROY_LAMBDA: ${self:service}-${sls:stage}-destroy
      BUCKET_NAME: ${self:custom.bucketName}
    events:
      - httpApi:
          path: /get
          method: post
  setupUpload:
    handler: src/handlers/setupUpload.handler
    environment:
      BUCKET_NAME: ${self:custom.bucketName}
    events:
      - httpApi:
          path: /setup-upload
          method: post

resources:
  Resources:
    PuplinkBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
              AllowedHeaders:
                - "*"
